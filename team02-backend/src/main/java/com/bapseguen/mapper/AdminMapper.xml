<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

	<!-- ===================== 관리자 로그인 ===================== -->
	<select id="loginAdmin" parameterType="MemberDTO"
		resultType="int">
		SELECT MEMBER_NUMBER
		FROM TBL_MEMBER
		WHERE MEMBER_ID =
		#{memberId}
		AND MEMBER_PASSWORD = #{memberPassword}
		AND MEMBER_TYPE =
		'ADMIN'
	</select>


	<!-- ===================== 배너 ===================== -->
	<insert id="insertBanner" parameterType="BannerDTO">
		INSERT INTO TBL_BANNER
		(BANNER_NUMBER, BANNER_TITLE, ADMIN_IMAGE_NUMBER, BANNER_END_DATE,
		BANNER_IS_ACTIVE, MEMBER_NUMBER, BANNER_CREATED_DATE)
		VALUES
		(SEQ_BANNER_NUMBER.NEXTVAL, #{bannerTitle}, #{adminImageNumber},
		#{bannerEndDate}, NVL(#{bannerIsActive}, 'Y'), #{memberNumber},
		SYSDATE)
	</insert>

	<select id="selectBannerList" resultType="BannerDTO">
		SELECT BANNER_NUMBER AS
		bannerNumber,
		BANNER_TITLE AS bannerTitle,
		ADMIN_IMAGE_NUMBER AS
		adminImageNumber,
		BANNER_END_DATE AS bannerEndDate,
		BANNER_IS_ACTIVE AS
		bannerIsActive,
		MEMBER_NUMBER AS memberNumber,
		BANNER_CREATED_DATE AS
		bannerCreatedDate,
		BANNER_UPDATED_DATE AS bannerUpdatedDate
		FROM
		TBL_BANNER
		ORDER BY BANNER_NUMBER DESC
	</select>

	<update id="updateBanner" parameterType="BannerDTO">
		UPDATE TBL_BANNER
		SET
		BANNER_TITLE = #{bannerTitle},
		ADMIN_IMAGE_NUMBER =
		#{adminImageNumber},
		BANNER_END_DATE = #{bannerEndDate},
		BANNER_IS_ACTIVE = #{bannerIsActive},
		MEMBER_NUMBER = #{memberNumber},
		BANNER_UPDATED_DATE = SYSDATE
		WHERE BANNER_NUMBER = #{bannerNumber}
	</update>

	<delete id="deleteBanner" parameterType="int">
		DELETE FROM TBL_BANNER
		WHERE BANNER_NUMBER = #{bannerNumber}
	</delete>


	<!-- ===================== 고객센터 문의 ===================== -->
	<select id="selectInquiryList" resultType="InquiryDTO">
		SELECT p.POST_NUMBER
		AS postNumber,
		p.MEMBER_NUMBER AS memberNumber,
		p.POST_TITLE AS
		postTitle,
		p.POST_CREATED_DATE AS postCreatedDate,
		i.INQUIRY_CONTENT AS
		inquiryContent,
		i.INQUIRY_STATUS AS inquiryStatus
		FROM TBL_POST p
		JOIN
		TBL_INQUIRY i ON i.POST_NUMBER = p.POST_NUMBER
		WHERE p.POST_TYPE =
		'INQUIRY'
		ORDER BY p.POST_NUMBER DESC
	</select>

	<select id="selectInquiryDetail" parameterType="int"
		resultType="InquiryDTO">
		SELECT p.POST_NUMBER AS postNumber,
		p.MEMBER_NUMBER AS
		memberNumber,
		p.POST_TITLE AS postTitle,
		p.POST_CREATED_DATE AS
		postCreatedDate,
		i.INQUIRY_CONTENT AS inquiryContent,
		i.INQUIRY_STATUS
		AS inquiryStatus
		FROM TBL_POST p
		JOIN TBL_INQUIRY i ON i.POST_NUMBER =
		p.POST_NUMBER
		WHERE p.POST_NUMBER = #{postNumber}
	</select>


	<!-- ===================== 공지 ===================== -->
	<insert id="insertNoticePost" parameterType="NoticeDTO">
		INSERT INTO TBL_POST
		(POST_NUMBER, MEMBER_NUMBER, POST_TITLE,
		POST_LIKE_COUNT,
		POST_VIEW_COUNT, POST_REPORT_COUNT,
		POST_DELETE_STATE,
		POST_CREATED_DATE, POST_TYPE)
		VALUES
		(SEQ_POST_NUMBER.NEXTVAL,
		#{memberNumber}, #{postTitle},
		0, 0, 0, 'N', SYSDATE, 'NOTICE')
	</insert>

	<insert id="insertNotice" parameterType="NoticeDTO">
		INSERT INTO TBL_NOTICE
		(POST_NUMBER, NOTICE_CONTENT)
		VALUES (SEQ_POST_NUMBER.CURRVAL,
		#{noticeContent})
	</insert>

	<select id="selectNoticeList" resultType="NoticeDTO">
		SELECT p.POST_NUMBER AS
		postNumber,
		p.MEMBER_NUMBER AS memberNumber,
		p.POST_TITLE AS postTitle,
		p.POST_CREATED_DATE AS postCreatedDate,
		n.NOTICE_CONTENT AS
		noticeContent
		FROM TBL_POST p
		JOIN TBL_NOTICE n ON n.POST_NUMBER =
		p.POST_NUMBER
		WHERE p.POST_TYPE = 'NOTICE'
		ORDER BY p.POST_NUMBER DESC
	</select>

	<update id="updateNoticeTitle" parameterType="NoticeDTO">
		UPDATE TBL_POST
		SET
		POST_TITLE = #{postTitle},
		POST_UPDATED_DATE = SYSDATE
		WHERE POST_NUMBER
		= #{postNumber}
	</update>

	<update id="updateNoticeContent" parameterType="NoticeDTO">
		UPDATE TBL_NOTICE
		SET NOTICE_CONTENT = #{noticeContent}
		WHERE POST_NUMBER = #{postNumber}
	</update>

	<delete id="deleteNotice" parameterType="int">
		DELETE FROM TBL_POST
		WHERE POST_NUMBER = #{postNumber}
	</delete>


	<!-- ===================== FAQ ===================== -->
	<insert id="insertFaqPost" parameterType="FaqDTO">
		INSERT INTO TBL_POST
		(POST_NUMBER, MEMBER_NUMBER, POST_TITLE,
		POST_LIKE_COUNT,
		POST_VIEW_COUNT, POST_REPORT_COUNT,
		POST_DELETE_STATE,
		POST_CREATED_DATE, POST_TYPE)
		VALUES
		(SEQ_POST_NUMBER.NEXTVAL,
		#{memberNumber}, #{postTitle},
		0, 0, 0, 'N', SYSDATE, 'FAQ')
	</insert>

	<insert id="insertFaq" parameterType="FaqDTO">
		INSERT INTO TBL_FAQ
		(POST_NUMBER, FAQ_CONTENT)
		VALUES (SEQ_POST_NUMBER.CURRVAL,
		#{faqContent})
	</insert>

	<select id="selectFaqList" resultType="FaqDTO">
		SELECT p.POST_NUMBER AS
		postNumber,
		p.MEMBER_NUMBER AS memberNumber,
		p.POST_TITLE AS postTitle,
		p.POST_CREATED_DATE AS postCreatedDate,
		f.FAQ_CONTENT AS faqContent
		FROM TBL_POST p
		JOIN TBL_FAQ f ON f.POST_NUMBER = p.POST_NUMBER
		WHERE
		p.POST_TYPE = 'FAQ'
		ORDER BY p.POST_NUMBER DESC
	</select>

	<select id="selectFaqDetail" parameterType="int"
		resultType="FaqDTO">
		SELECT p.POST_NUMBER AS postNumber,
		p.MEMBER_NUMBER AS
		memberNumber,
		p.POST_TITLE AS postTitle,
		p.POST_CREATED_DATE AS
		postCreatedDate,
		f.FAQ_CONTENT AS faqContent
		FROM TBL_POST p
		JOIN TBL_FAQ
		f ON f.POST_NUMBER = p.POST_NUMBER
		WHERE p.POST_NUMBER = #{postNumber}
	</select>

	<update id="updateFaqTitle" parameterType="FaqDTO">
		UPDATE TBL_POST
		SET
		POST_TITLE = #{postTitle},
		POST_UPDATED_DATE = SYSDATE
		WHERE POST_NUMBER
		= #{postNumber}
	</update>

	<update id="updateFaqContent" parameterType="FaqDTO">
		UPDATE TBL_FAQ
		SET
		FAQ_CONTENT = #{faqContent}
		WHERE POST_NUMBER = #{postNumber}
	</update>

	<delete id="deleteFaq" parameterType="int">
		DELETE FROM TBL_POST WHERE
		POST_NUMBER = #{postNumber}
	</delete>


	<!-- ===================== 신고 / 정지 / 블랙리스트 ===================== -->
	<select id="selectReportList" resultType="PostReportDTO">
		SELECT
		POST_REPORT_NUMBER AS postReportNumber,
		POST_NUMBER AS postNumber,
		POST_REPORT_REASON AS postReportReason,
		TO_CHAR(POST_REPORT_DATE,'YYYY-MM-DD') AS postReportDate,
		POST_REPORT_COUNT AS postReportCount,
		MEMBER_NUMBER AS memberNumber
		FROM TBL_POST_REPORT
		ORDER BY POST_REPORT_NUMBER DESC
	</select>

	<select id="selectSuspendList" resultType="MemberSuspendDTO">
		SELECT MEMBER_NUMBER
		AS memberNumber,
		SUSPEND_START_DATE AS suspendStartDate,
		SUSPEND_END_DATE AS suspendEndDate,
		SUSPEND_REPORT_COUNT AS
		suspendReportCount
		FROM TBL_MEMBER_SUSPEND
		ORDER BY SUSPEND_START_DATE
		DESC
	</select>

	<select id="selectBlacklistList" resultType="MemberBlacklistDTO">
		SELECT
		BLACKLIST_NUMBER AS blacklistNumber,
		MEMBER_NUMBER AS memberNumber,
		BLACKLIST_START_DATE AS blacklistStartDate
		FROM TBL_MEMBER_BLACKLIST
		ORDER BY BLACKLIST_NUMBER DESC
	</select>

	<!-- 회원 경고 횟수 증가 -->
	<update id="increaseWarningCount" parameterType="int">
		UPDATE
		TBL_GENERAL_MEMBER
		SET GENERAL_WARNING_COUNT =
		NVL(GENERAL_WARNING_COUNT, 0) + 1
		WHERE MEMBER_NUMBER = #{memberNumber}
	</update>

	<update id="increaseWarningCountSeller" parameterType="int">
		UPDATE
		TBL_SELLER_MEMBER
		SET SELLER_WARNING_COUNT = NVL(SELLER_WARNING_COUNT,
		0) + 1
		WHERE MEMBER_NUMBER = #{memberNumber}
	</update>

	<!-- 블랙리스트 등록 (※ 딱 한 번만 선언) -->
	<insert id="insertBlacklistMember"
		parameterType="MemberBlacklistDTO">
		INSERT INTO TBL_MEMBER_BLACKLIST
		(BLACKLIST_NUMBER,
		MEMBER_NUMBER, BLACKLIST_START_DATE)
		VALUES
		(SEQ_BLACKLIST_NUMBER.NEXTVAL, #{memberNumber}, SYSDATE)
	</insert>


	<!-- 회원 목록 (검색 + 페이징) -->
	<select id="selectMemberList" parameterType="map"
		resultType="MemberListDTO">
		SELECT * FROM (
		SELECT ROWNUM AS RNUM, SUB.*
		FROM (
		SELECT
		M.MEMBER_NUMBER,
		M.MEMBER_ID,
		M.MEMBER_TYPE,
		CASE
		WHEN M.MEMBER_TYPE =
		'GENERAL' THEN G.GENERAL_NAME
		WHEN M.MEMBER_TYPE = 'SELLER' THEN
		S.SELLER_NAME
		ELSE NULL
		END AS MEMBER_NAME,
		CASE
		WHEN M.MEMBER_TYPE =
		'GENERAL' THEN G.GENERAL_WARNING_COUNT
		WHEN M.MEMBER_TYPE = 'SELLER'
		THEN S.SELLER_WARNING_COUNT
		ELSE NULL
		END AS WARNING_COUNT,
		CASE
		WHEN
		M.MEMBER_TYPE = 'GENERAL' THEN G.GENERAL_TREE_GRADE
		WHEN M.MEMBER_TYPE
		= 'SELLER' THEN S.SELLER_TREE_GRADE
		ELSE NULL
		END AS TREE_GRADE
		FROM
		TBL_MEMBER M
		LEFT JOIN TBL_GENERAL_MEMBER G ON M.MEMBER_NUMBER =
		G.MEMBER_NUMBER
		LEFT JOIN TBL_SELLER_MEMBER S ON M.MEMBER_NUMBER =
		S.MEMBER_NUMBER
		<where>
			<if
				test="searchType != null and searchWord != null and searchWord != ''">
				<choose>
					<when test="searchType == 'id'">
						AND M.MEMBER_ID LIKE '%' || #{searchWord} || '%'
					</when>
					<when test="searchType == 'name'">
						AND (G.GENERAL_NAME LIKE '%' || #{searchWord} ||
						'%'
						OR S.SELLER_NAME LIKE '%' || #{searchWord} || '%')
					</when>
					<when test="searchType == 'type'">
						AND M.MEMBER_TYPE = UPPER(#{searchWord})
					</when>
				</choose>
			</if>
		</where>
		ORDER BY M.MEMBER_NUMBER DESC
		) SUB
		)
		WHERE RNUM BETWEEN #{startRow} AND
		#{endRow}
	</select>

	<!-- 회원 상세 조회 -->
	<select id="selectMemberDetail" parameterType="int"
		resultType="com.bapseguen.app.dto.view.MemberDetailDTO">
		SELECT
		M.MEMBER_NUMBER AS memberNumber,
		M.MEMBER_ID AS memberId,
		M.MEMBER_TYPE AS memberType,
		NVL(G.GENERAL_NAME, S.SELLER_NAME) AS memberName,
		NVL(G.GENERAL_WARNING_COUNT, S.SELLER_WARNING_COUNT) AS warningCount,
		NVL(G.GENERAL_TREE_GRADE, S.SELLER_TREE_GRADE) AS treeGrade
		FROM TBL_MEMBER M
		LEFT JOIN TBL_GENERAL_MEMBER G ON M.MEMBER_NUMBER = G.MEMBER_NUMBER
		LEFT JOIN TBL_SELLER_MEMBER S ON M.MEMBER_NUMBER = S.MEMBER_NUMBER
		WHERE M.MEMBER_NUMBER = #{memberNumber}
	</select>

	<!-- 회원 수 (검색 포함) -->
	<select id="memberListCount" parameterType="map"
		resultType="int">
		SELECT COUNT(*)
		FROM TBL_MEMBER M
		LEFT JOIN TBL_GENERAL_MEMBER G ON
		M.MEMBER_NUMBER = G.MEMBER_NUMBER
		LEFT JOIN TBL_SELLER_MEMBER S ON
		M.MEMBER_NUMBER = S.MEMBER_NUMBER
		<where>
			<if
				test="searchType != null and searchWord != null and searchWord != ''">
				<choose>
					<when test="searchType == 'id'">
						AND M.MEMBER_ID LIKE '%' || #{searchWord} || '%'
					</when>
					<when test="searchType == 'name'">
						AND (G.GENERAL_NAME LIKE '%' || #{searchWord} ||
						'%'
						OR S.SELLER_NAME LIKE '%' || #{searchWord} || '%')
					</when>
					<when test="searchType == 'type'">
						AND M.MEMBER_TYPE = UPPER(#{searchWord})
					</when>
				</choose>
			</if>
		</where>
	</select>


	<!-- ===================== 대시보드 통계 ===================== -->
	<select id="countNotices" resultType="int">
		SELECT COUNT(*) FROM
		TBL_NOTICE
	</select>

	<select id="countFaqs" resultType="int">
		SELECT COUNT(*) FROM TBL_FAQ
	</select>

	<select id="countInquiries" resultType="int">
		SELECT COUNT(*) FROM
		TBL_INQUIRY
	</select>

	<select id="countUnansweredInquiries" resultType="int">
		SELECT COUNT(*)
		FROM TBL_INQUIRY WHERE INQUIRY_STATUS = 'WAIT'
	</select>

	<select id="countReports" resultType="int">
		SELECT COUNT(*) FROM
		TBL_POST_REPORT
	</select>

	<select id="countActiveBanners" resultType="int">
		SELECT COUNT(*) FROM
		TBL_BANNER WHERE BANNER_IS_ACTIVE = 'Y'
	</select>

	<!-- 최근 6개월 신규 회원 수 -->
	<select id="countMonthlyMembers" resultType="map">
		SELECT joinMonth,
		COUNT(*) AS memberCount
		FROM (
		-- 일반 회원
		SELECT TO_CHAR(GENERAL_JOIN_DATE,
		'YYYY-MM') AS joinMonth
		FROM TBL_GENERAL_MEMBER
		UNION ALL
		-- 판매자 회원
		SELECT TO_CHAR(SELLER_JOIN_DATE, 'YYYY-MM') AS joinMonth
		FROM
		TBL_SELLER_MEMBER
		)
		WHERE joinMonth >= TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,
		'MM'), -5), 'YYYY-MM')
		GROUP BY joinMonth
		ORDER BY joinMonth
	</select>

	<!-- 회원 타입 조회 -->
	<select id="getMemberType" parameterType="int"
		resultType="string">
		SELECT MEMBER_TYPE
		FROM TBL_MEMBER
		WHERE MEMBER_NUMBER =
		#{memberNumber}
	</select>

	<!-- 경고 횟수 조회 -->
	<select id="getWarningCount" parameterType="int"
		resultType="int">
		SELECT
		NVL(G.GENERAL_WARNING_COUNT, S.SELLER_WARNING_COUNT)
		AS warningCount
		FROM TBL_MEMBER M
		LEFT JOIN TBL_GENERAL_MEMBER G ON
		M.MEMBER_NUMBER = G.MEMBER_NUMBER
		LEFT JOIN TBL_SELLER_MEMBER S ON
		M.MEMBER_NUMBER = S.MEMBER_NUMBER
		WHERE M.MEMBER_NUMBER =
		#{memberNumber}
	</select>

</mapper>
