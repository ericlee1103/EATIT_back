<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<!-- 로그인 -->
	<select id="login" parameterType="MemberDTO" resultType="int">
		select member_number from tbl_member
		where member_id = #{memberId} and member_password = #{memberPassword}
	</select>
	
	<!-- 로그인시 멤버유형 분기 -->
	<select id="getMemberType" parameterType="int" resultType="string">
  		SELECT MEMBER_TYPE
  		FROM TBL_MEMBER
  		WHERE MEMBER_NUMBER = #{value}
	</select>
	
	<!-- 아이디 존재 여부 -->
	<select id="existsId" parameterType="string" resultType="int">
  		SELECT COUNT(1)
    	FROM TBL_MEMBER
   		WHERE MEMBER_ID = #{value}
	</select>	
	
	<!-- 회원 아이디 중복 체크 -->
	<select id="checkId" parameterType="string" resultType="int">
  		SELECT COUNT(*) 
  		FROM TBL_MEMBER 
  		WHERE MEMBER_ID = #{value}
	</select>
	
	<!-- 휴대폰번호 존재 여부 -->
	<select id="existsPhone" parameterType="string" resultType="int">
	  SELECT CASE WHEN
	    EXISTS (SELECT 1 FROM TBL_GENERAL_MEMBER WHERE GENERAL_PHONE_NUMBER = REGEXP_REPLACE(#{value}, '[^0-9]', ''))
	    OR EXISTS (SELECT 1 FROM TBL_SELLER_MEMBER  WHERE SELLER_PHONE_NUMBER  = REGEXP_REPLACE(#{value}, '[^0-9]', ''))
	  THEN 1 ELSE 0 END
	  FROM dual
	</select>
	
	<!-- 공통 MEMBER -->
	<insert id="joinMember" parameterType="MemberDTO">
  		<selectKey keyProperty="memberNumber" resultType="int" order="BEFORE">
    		SELECT SEQ_MEMBER_NUMBER.NEXTVAL FROM dual
  		</selectKey>
  		INSERT INTO TBL_MEMBER (MEMBER_NUMBER, MEMBER_ID, MEMBER_PASSWORD, MEMBER_TYPE)
  		VALUES (#{memberNumber}, #{memberId}, #{memberPassword}, #{memberType})
	</insert>

	<!-- 일반회원 상세 -->
	<insert id="joinGeneral" parameterType="GeneralMemberDTO">
  		INSERT INTO TBL_GENERAL_MEMBER
  		(MEMBER_NUMBER, GENERAL_REPORT_COUNT, GENERAL_WARNING_COUNT, GENERAL_BLACK_STATE, GENERAL_NAME, GENERAL_BIRTHDATE, GENERAL_PHONE_NUMBER, GENERAL_JOIN_DATE,
GENERAL_TREE_GRADE, GENERAL_PAYMENT_AMOUNT)
  		VALUES (#{memberNumber},0, 0, 'N', #{generalName}, TO_DATE(#{generalBirthdate}, 'YYYY-MM-DD'), REGEXP_REPLACE(#{generalPhoneNumber}, '[^0-9]', ''), SYSDATE, '씨앗', 0)
	</insert>

	<!-- 판매자회원 상세 -->
	<insert id="joinSeller" parameterType="SellerMemberDTO">
  		INSERT INTO TBL_SELLER_MEMBER
  		(MEMBER_NUMBER, SELLER_REPORT_COUNT, SELLER_WARNING_COUNT, SELLER_BLACK_STATE, SELLER_NAME, SELLER_BIRTHDATE, SELLER_PHONE_NUMBER, SELLER_JOIN_DATE, SELLER_TREE_GRADE, SELLER_PAYMENT_AMOUNT)
  		VALUES (#{memberNumber},0, 0, 'N', #{sellerName}, TO_DATE(#{sellerBirthdate}, 'YYYY-MM-DD'), REGEXP_REPLACE(#{sellerPhoneNumber}, '[^0-9]', ''), SYSDATE, '씨앗', 0)
	</insert>

	<!-- 가게 -->
	<insert id="joinStore" parameterType="StoreDTO">
  		INSERT INTO TBL_STORE
  		(BUSINESS_NUMBER, MEMBER_NUMBER, STORE_NAME, STORE_OPEN_DATE, STORE_TEL, STORE_ADDRESS, STORE_ADDRESS_DETAIL, STORE_ZIP_CODE, STORE_OPEN_TIME, STORE_CLOSE_TIME, STORE_LATITUDE, STORE_LONGITUDE)
  		VALUES (#{businessNumber}, #{memberNumber}, #{storeName}, TO_DATE(#{storeOpenDate}, 'YYYY-MM-DD'),
   		#{storeTel}, #{storeAddress}, #{storeAddressDetail}, #{storeZipCode}, NULL, NULL, #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL})
	</insert>
	
	<!-- 아이디찾기 -->	
	<select id="findId" parameterType="map" resultType="string">
		SELECT m.MEMBER_ID
		FROM TBL_MEMBER m
		JOIN TBL_GENERAL_MEMBER g ON g.MEMBER_NUMBER = m.MEMBER_NUMBER
		WHERE g.GENERAL_NAME = #{name} AND g.GENERAL_PHONE_NUMBER = REPLACE(#{generalPhoneNumber}, '-', '')
		UNION
		SELECT m.MEMBER_ID
		FROM TBL_MEMBER m
		JOIN TBL_SELLER_MEMBER s ON s.MEMBER_NUMBER = m.MEMBER_NUMBER
		WHERE s.SELLER_NAME = #{name} AND s.SELLER_PHONE_NUMBER = REPLACE(#{sellerPhoneNumber}, '-', '')
	</select>

	<!-- 비밀번호찾기 -->	
	<select id="findPw" parameterType="map" resultType="int">
		SELECT m.MEMBER_NUMBER
		FROM TBL_MEMBER m
		JOIN TBL_GENERAL_MEMBER g ON g.MEMBER_NUMBER = m.MEMBER_NUMBER
		WHERE m.MEMBER_ID = #{memberId} AND g.GENERAL_PHONE_NUMBER = REPLACE(#{generalPhoneNumber}, '-', '')
		UNION
		SELECT m.MEMBER_NUMBER
		FROM TBL_MEMBER m
		JOIN TBL_SELLER_MEMBER s ON s.MEMBER_NUMBER = m.MEMBER_NUMBER
		WHERE m.MEMBER_ID = #{memberId} AND s.SELLER_PHONE_NUMBER = REPLACE(#{sellerPhoneNumber}, '-', '')
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="map">
		UPDATE TBL_MEMBER
		SET MEMBER_PASSWORD = #{memberPassword}
		WHERE MEMBER_NUMBER = #{memberNumber}
	</update>
	<!-- 일반회원 UPDATED_DATE 갱신 -->
	<update id="generalUpdatedDate" parameterType="map">
	  UPDATE TBL_GENERAL_MEMBER
	     SET GENERAL_UPDATED_DATE = SYSDATE
	   WHERE MEMBER_NUMBER = #{memberNumber}
	</update>
	
	<!-- 판매자 UPDATED_DATE 갱신 -->
	<update id="sellerUpdatedDate" parameterType="map">
	  UPDATE TBL_SELLER_MEMBER
	     SET SELLER_UPDATED_DATE = SYSDATE
	   WHERE MEMBER_NUMBER = #{memberNumber}
	</update>	
	
	<!-- GENERAL등급/누적결제 -->
	<select id="getGeneralGradeInfo" parameterType="int" resultType="GeneralMemberDTO">
	  SELECT
	      g.MEMBER_NUMBER              AS memberNumber,
	      g.GENERAL_TREE_GRADE         AS generalTreeGrade,
	      NVL(g.GENERAL_PAYMENT_AMOUNT, 0) AS generalPaymentAmount
	  FROM TBL_GENERAL_MEMBER g
	  WHERE g.MEMBER_NUMBER = #{value}
	</select>
	
	<!-- SELLER등급/누적결제 -->
	<select id="getSellerGradeInfo" parameterType="int" resultType="SellerMemberDTO">
	  SELECT
	      s.MEMBER_NUMBER              AS memberNumber,
	      s.SELLER_TREE_GRADE          AS sellerTreeGrade,
	      NVL(s.SELLER_PAYMENT_AMOUNT, 0) AS sellerPaymentAmount
	  FROM TBL_SELLER_MEMBER s
	  WHERE s.MEMBER_NUMBER = #{value}
	</select>	
	
	<select id="findActiveSuspend" parameterType="int" resultType="com.bapseguen.app.dto.MemberSuspendDTO">
	  SELECT
	    MEMBER_NUMBER                                    AS memberNumber,
	    TO_CHAR(SUSPEND_START_DATE,'YYYY-MM-DD')         AS suspendStartDate,
	    TO_CHAR(SUSPEND_END_DATE,'YYYY-MM-DD')           AS suspendEndDate,
	    NVL(SUSPEND_REPORT_COUNT,0)                      AS suspendReportCount
	  FROM (SELECT * FROM TBL_MEMBER_SUSPEND
	        WHERE MEMBER_NUMBER = #{value}
	        AND TRUNC(SYSDATE) BETWEEN TRUNC(SUSPEND_START_DATE)
	        AND TRUNC(NVL(SUSPEND_END_DATE, DATE '9999-12-31'))
	        ORDER BY SUSPEND_END_DATE DESC NULLS LAST, SUSPEND_START_DATE DESC
	  )
	  WHERE ROWNUM = 1
	</select>
	
	<!-- 블랙리스트/블랙상태 여부: 있으면 1, 없으면 0 -->
	<select id="isBlacklisted" parameterType="int" resultType="int">
	  SELECT CASE WHEN
	    EXISTS (SELECT 1 FROM TBL_MEMBER_BLACKLIST b WHERE b.MEMBER_NUMBER = #{value})
	    OR EXISTS (SELECT 1 FROM TBL_GENERAL_MEMBER g WHERE g.MEMBER_NUMBER = #{value} AND g.GENERAL_BLACK_STATE = 'Y')
	    OR EXISTS (SELECT 1 FROM TBL_SELLER_MEMBER  s WHERE s.MEMBER_NUMBER = #{value} AND s.SELLER_BLACK_STATE  = 'Y')
	  THEN 1 ELSE 0 END
	  FROM dual
	</select>
	
</mapper>
